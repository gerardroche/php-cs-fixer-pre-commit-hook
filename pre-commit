#!/bin/sh
#
# Copyright (C) 2023 Gerard Roche
#
# This file is part of This program.
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with This program.  If not, see <https://www.gnu.org/licenses/>.
#
# PHP-CS-Fixer pre-commit hook
# https://github.com/gerardroche/php-cs-fixer-pre-commit-hook
#
# @see https://git-scm.com/docs/git-config#Documentation/git-config.txt-corehooksPath
# @see https://git-scm.com/docs/githooks#_pre_commit)
# @see https://github.com/PHP-CS-Fixer/PHP-CS-Fixer
# @see https://cs.symfony.com

set -e

unset CDPATH

IFS='
'

get_config() {
    # https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/blob/master/doc/config.rst
    # https://github.com/PHP-CS-Fixer/PHP-CS-Fixer/blob/master/UPGRADE-v3.md
    for candidate in .php-cs-fixer.php .php-cs-fixer.dist.php .php_cs .php_cs.dist; do
        if test -f "./$candidate"; then
            echo "./$candidate"
            return
        fi
    done
}

run_php_cs_fixer() {
    php_cs_fixer_bin=
    for candidate in tools/php-cs-fixer vendor/bin/php-cs-fixer; do
        if test -f "$candidate"; then
            php_cs_fixer_bin="$candidate"
            break
        fi
    done

    if test -z "$php_cs_fixer_bin"; then
        return  # Noop, php-cs-fixer not found.
    fi

    config="$(get_config)"
    if test -z "$config"; then
        return  # Noop, php-cs-fixer config not found.
    fi

    # Only do a full check if the PHP Coding Standards fixer configuration file
    # or the Composer dependencies lock file has changed. Otherwise, do a check
    # only for files that have changed since the last commit.
    changed_files=$(git diff --staged --name-only --diff-filter=ACMRTUXB)

    if ! echo "${changed_files}" | grep -qE "^(laravel/)?(\\.php-cs-fixer(\\.dist)?\\.php|composer\\.lock)$"; then
        extra_args=$(printf -- '--path-mode=intersection\n--\n%s' "${changed_files}")
    else
        extra_args=''
    fi

    export PHP_CS_FIXER_IGNORE_ENV="${PHP_CS_FIXER_IGNORE_ENV:-1}"
    export XDEBUG_MODE="${XDEBUG_MODE:-off}"

    rerun_with_violation_details() {
        echo >&2 "\033[0;33mCoding guidelines pre-commit check failed.\033[0m"
        echo >&2 "\033[0;33mRunning check again in verbose mode ...\033[0m"

        "$php_cs_fixer_bin" fix --config="$config"\
            -vvv \
            --diff \
            --dry-run \
            --stop-on-violation \
            --using-cache=no \
            ${extra_args}

        exit 1
    }

    # PHP Coding Standards Fixer is run quietly. If there are errors, it is run
    # again in verbose mode to provide more information about which rules and
    # which files are failing the check.
    "$php_cs_fixer_bin" fix \
        --config="$config" \
        -q \
        --stop-on-violation \
        --using-cache=no \
        ${extra_args} || rerun_with_violation_details
}

run_php_cs_fixer
